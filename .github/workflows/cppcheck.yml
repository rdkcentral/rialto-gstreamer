# Copyright (C) 2023 Sky UK
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation;
# version 2.1 of the License.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

name: cppcheck

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master", "rdkcentral:master" ]
  pull_request:
    branches: [ "master", "rdkcentral:master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: cppcheck
    runs-on: ubuntu-22.04
    steps:
      - name: Install cppcheck
        run: |
          sudo apt-get update
          sudo apt-get install cppcheck

      - name: checkout repo
        uses: actions/checkout@v3

      # Run the build script and output errors to file
      # Proccess returns error if failure detected
      - name: cppcheck command
        run: |
              cppcheck -q -ibuild --enable=all --output-file=cppcheck_report.txt --std=c++17 --error-exitcode=1 --suppress-xml=cppcheck_suppressions.xml .

      # Upload logs on failure
      - name: Upload logs
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cppcheck_result
          path: |
            cppcheck_report.txt

      # Get process_coverage_stats script output
      - id: get-comment-body
        if: ${{ failure() && github.ref != 'refs/heads/master' }}
        run: |
          body="$(cat cppcheck_report.txt)"
          body="${body//'%'/'%25'}"
          body="${body//$'\n'/'%0A'}"
          body="${body//$'\r'/'%0D'}"
          echo "::set-output name=body::$body"

      # Create comment with coverage info
      - name: Create Comment
        if: ${{ failure() && github.ref != 'refs/heads/master' }}
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: ${{ steps.get-comment-body.outputs.body }}

